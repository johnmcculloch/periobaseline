#Mothur batch file for periobaseline - discard singletons - denoise 3diffs - use RDP trainset 14 to separate eukaryotes - use HOMD for OTU classification - no subsampling
#make OTUs
make.contigs(file=periobaseline.files, processors=8)
summary.seqs(fasta=current)
screen.seqs(fasta=current, group=current, maxambig=0, minlength=290, maxlength=295)
summary.seqs(fasta=current)
unique.seqs(fasta=current)
count.seqs(name=current, group=current)
align.seqs(fasta=periobaseline.trim.contigs.good.unique.fasta, reference=/home/juliana/db/silvafull/silva.nr_v119.align, flip=t)
summary.seqs(fasta=current)
screen.seqs(fasta=current, count=current, start=11895, end=25318, maxhomop=8)
filter.seqs(fasta=current, vertical=T, trump=.)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=3)
split.abund(fasta=current, count=current, cutoff=1)
chimera.uchime(fasta=periobaseline.trim.contigs.good.unique.good.filter.unique.precluster.abund.fasta, count=periobaseline.trim.contigs.good.unique.good.filter.unique.precluster.abund.count_table, dereplicate=t)
remove.seqs(fasta=current, accnos=current)
classify.seqs(fasta=current, count=current, reference=/home/juliana/db/RDP/RDP14/trainset14/trainset14_032015.pds.fasta, taxonomy=/home/juliana/db/RDP/RDP14/trainset14/trainset14_032015.pds.tax, cutoff=80)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Eukaryota)
classify.seqs(fasta=current, count=current, reference=/home/juliana/db/HOMD/HOMD_16S_rRNA_RefSeq_V13.2.mothur.fasta, taxonomy=/home/juliana/db/HOMD/HOMD_16S_rRNA_RefSeq_V13.2.mothur.taxonomy, cutoff=80)
cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.15)
make.shared(list=current, count=current, label=0.03)
classify.otu(list=current, count=current, taxonomy=current, cutoff=80, label=0.03)
system(mv periobaseline.trim.contigs.good.unique.good.filter.unique.precluster.abund.pick.pick.an.unique_list.shared periobaseline.an.shared)
system(mv periobaseline.trim.contigs.good.unique.good.filter.unique.precluster.abund.pick.pick.an.unique_list.0.03.cons.taxonomy periobaseline.an.cons.taxonomy)
#alpha
collect.single(shared=periobaseline.an.shared, calc=chao-invsimpson, freq=100)
rarefaction.single(shared=periobaseline.an.shared, groupmode=F, calc=sobs, freq=100)
summary.single(shared=periobaseline.an.shared, calc=nseqs-coverage-sobs-chao-invsimpson)
